{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build: libnfe.dll",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars32.bat\" && cl /D_DEBUG /MDd /Zi /nologo /W3 /D_CRT_SECURE_NO_WARNINGS /I \"${workspaceFolder}\\src\\client-side\" /I \"C:\\Program Files (x86)\\OpenSSL-Win32\\include\" \"${workspaceFolder}\\src\\client-side\\libnfe.c\" \"${workspaceFolder}\\src\\client-side\\cJSON.c\" /link /DLL /MACHINE:X86 /OUT:\"${workspaceFolder}\\build\\libnfe.dll\" /IMPLIB:\"${workspaceFolder}\\build\\libnfe.lib\""
            ],
            "problemMatcher": [
                "$msCompile"
            ],
            "group": "build"
        },
        {
            "label": "Build: test_libnfe.exe",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars32.bat\" && cl /D_DEBUG /MDd /Zi /nologo /W3 /D_CRT_SECURE_NO_WARNINGS /I \"${workspaceFolder}\\src\\client-side\" \"${workspaceFolder}\\src\\test\\test_libnfe.c\" /link /MACHINE:X86 /OUT:\"${workspaceFolder}\\build\\test_libnfe.exe\" /LIBPATH:\"${workspaceFolder}\\build\" \"${workspaceFolder}\\build\\libnfe.lib\""
            ],
            "problemMatcher": [
                "$msCompile"
            ],
            "group": "build",
            "dependsOn": [
                "Build: libnfe.dll"
            ]
        },
        {
            "label": "Deploy: Create Directories",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "if not exist C:\\madeiras\\erp mkdir C:\\madeiras\\erp && if not exist C:\\madeiras\\erp\\libs mkdir C:\\madeiras\\erp\\libs && if not exist C:\\madeiras\\erp\\cfg mkdir C:\\madeiras\\erp\\cfg && if not exist C:\\madeiras\\erp\\test mkdir C:\\madeiras\\erp\\test && if not exist C:\\madeiras\\erp\\service mkdir C:\\madeiras\\erp\\service && if not exist C:\\madeiras\\erp\\certificates mkdir C:\\madeiras\\erp\\certificates"
            ],
            "problemMatcher": []
        },
        {
            "label": "Deploy: Copy Files",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "copy /Y \"${workspaceFolder}\\build\\libnfe.dll\" \"C:\\madeiras\\erp\\libs\\\" && copy /Y \"${workspaceFolder}\\build\\test_libnfe.exe\" \"C:\\madeiras\\erp\\\" && copy /Y \"${workspaceFolder}\\src\\test\\test_libnfe.bat\" \"C:\\madeiras\\erp\\\" && copy /Y \"${workspaceFolder}\\src\\client-side\\libnfe.cfg\" \"C:\\madeiras\\erp\\cfg\\\" && copy /Y \"${workspaceFolder}\\src\\client-side\\openssl.cnf\" \"C:\\madeiras\\erp\\cfg\\\" && copy /Y \"${workspaceFolder}\\src\\test\\nfe.json\" \"C:\\madeiras\\erp\\test\\\" && copy /Y \"${workspaceFolder}\\src\\test\\status_servico.json\" \"C:\\madeiras\\erp\\test\\\" && copy /Y \"${workspaceFolder}\\src\\server-side\\nfe_service.py\" \"C:\\madeiras\\erp\\service\\\""
            ],
            "problemMatcher": [],
            "dependsOn": [
                "Build: test_libnfe.exe",
                "Deploy: Create Directories"
            ]
        },
        {
            "label": "build",
            "type": "shell",
            "command": "echo Build and deployment to C:\\madeiras\\erp completed successfully.",
            "args": [],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "Deploy: Copy Files"
            ],
            "dependsOrder": "sequence"
        },
        {
            "label": "Run Local Test Suite",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "start \"LibNFe Test Suite\" cmd /c C:\\madeiras\\erp\\test_libnfe.bat"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "dependsOn": [
                "build"
            ]
        }
    ]
}
